
File Descriptors

A file descriptor is a small integer used to perform I/O on a file.
The value of a file descriptor is from 0 to (NOFILES-1).  A process
may have no more than NOFILES file descriptors open simultaneously.
A file descriptor is returned by calls such as open(2) or pipe(2).
The file descriptor is used as an argument by calls such as read(2),
write(2), ioctl(2), and close(2).

Path Name

A path name is a null-terminated character string starting with an
optional slash (/), followed by zero or more directory names
separated by slashes, optionally followed by a file name.

If a path name begins with a slash, the path search begins at the
root directory.  Otherwise, the search begins from the current
working directory.

A slash by itself names the root directory.

Unless specifically stated otherwise, the null path name is treated
as if it named a non-existent file.

File Access Permissions

Read, write, and execute/search permissions for a file are granted to
a process if one or more of the following are true:

 The effective user ID of the process is super-user.

 The effective user ID of the process matches the user ID of the
 owner of the file and the appropriate access bit of the "owner"
 portion (0700) of the file mode is set.

 The effective user ID of the process does not match the user ID of
 the owner of the file, but either the effective group ID or one of
 the supplementary group IDs of the process match the group ID of the
 file and the appropriate access bit of the "group" portion (0070) of
 the file mode is set.

 The effective user ID of the process does not match the user ID of
 the owner of the file, and neither the effective group ID nor any of
 the supplementary group IDs of the process match the group ID of the
 file, but the appropriate access bit of the "other" portion (0007)
 of the file mode is set.

Otherwise, the corresponding permissions are denied.

